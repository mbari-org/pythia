<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.mbari</groupId>
  <artifactId>pythia</artifactId>
  <version>0.0.8</version>
  <properties>
    <compiler-plugin.version>3.12.1</compiler-plugin.version>
    <djl.version>0.26.0</djl.version>
    <maven.compiler.release>17</maven.compiler.release>
    <palantirJavaFormat.version>2.28.0</palantirJavaFormat.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <pytorch.jni.version>2.1.1-0.26.0</pytorch.jni.version>
    <pytorch.native.version>2.1.1</pytorch.native.version>
    <pytorch.version>2.1.1</pytorch.version>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.8.2</quarkus.platform.version>
    <spotless.version>2.35.0</spotless.version>
    <skipITs>true</skipITs>
    <surefire-plugin.version>3.2.3</surefire-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>ai.djl</groupId>
        <artifactId>bom</artifactId>
        <version>${djl.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ai.djl</groupId>
      <artifactId>api</artifactId>
    </dependency>
    <dependency>
      <groupId>ai.djl.pytorch</groupId>
      <artifactId>pytorch-engine</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <!-- optional: limit format enforcement to just the files changed by this feature branch -->
          <!-- <ratchetFrom>origin/main</ratchetFrom> -->
          <rachetFrom>NONE</rachetFrom>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <!-- no need to specify files, inferred automatically, but you can if you want -->
      
            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <palantirJavaFormat>
              <!-- Optionally specify a version -->
              <version>${palantirJavaFormat.version}</version>
            </palantirJavaFormat>
      
            <!-- make sure every file has the following copyright header.
              optionally, Spotless can set copyright years by digging
              through git history (see "license" section below) -->
            <licenseHeader>
              <file>${project.basedir}/license-header.txt</file>
              <!-- <content>/* (C)$YEAR */</content> -->
            </licenseHeader>
          </java>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>linux-amd64</id>
      <dependencies>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-native-cpu</artifactId>
          <version>${pytorch.native.version}</version>
          <classifier>linux-x86_64</classifier>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-jni</artifactId>
          <version>${pytorch.jni.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>linux-amd64-cuda</id>
      <dependencies>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-native-cu117</artifactId>
          <version>${pytorch.native.version}</version>
          <classifier>linux-x86_64</classifier>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-jni</artifactId>
          <version>${pytorch.jni.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>linux-aarch64</id>
      <dependencies>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-native-cpu-precxx11</artifactId>
          <version>${pytorch.native.version}</version>
          <classifier>linux-aarch64</classifier>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-jni</artifactId>
          <version>${pytorch.jni.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>macos-amd64</id>
      <dependencies>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-native-cpu</artifactId>
          <version>${pytorch.native.version}</version>
          <classifier>osx-x86_64</classifier>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-jni</artifactId>
          <version>${pytorch.jni.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>macos-aarch64</id>
      <dependencies>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-native-cpu</artifactId>
          <version>${pytorch.native.version}</version>
          <classifier>osx-aarch64</classifier>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ai.djl.pytorch</groupId>
          <artifactId>pytorch-jni</artifactId>
          <version>${pytorch.jni.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
